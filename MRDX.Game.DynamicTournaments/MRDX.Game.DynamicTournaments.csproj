<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <LangVersion>12.0</LangVersion>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <OutputPath>$(RELOADEDIIMODS)/MRDX.Game.DynamicTournaments</OutputPath>
    <ImplicitUsings>enable</ImplicitUsings>

    <!-- IL Trimming Support for Framework Dependent Apps. Unofficial.
         If you set this to true, trimming will be enabled when you publish the mod.
         Test trimming with: `BuildLinked.ps1` in PowerShell. -->
    <ReloadedILLink>false</ReloadedILLink>
	  <ErrorOnDuplicatePublishOutputFiles>false</ErrorOnDuplicatePublishOutputFiles>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <Optimize>False</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <Optimize>True</Optimize>
  </PropertyGroup>

  <ItemGroup>
    <ReloadedLinkRoots Include="MRDX.Game.ABD_Tournaments" />
    <!-- Add assemblies to be trimmed. You might need to add their dependencies too!  -->
    <!-- <ReloadedLinkAssemblies Include="Reloaded.Memory" /> -->
  </ItemGroup>

  <Import Project="Reloaded.Trimming.targets" />
  <Import Project="Reloaded.Checks.targets" />

  <ItemGroup>
	<None Update="ModConfig.json">
	  <CopyToOutputDirectory>Always</CopyToOutputDirectory>
	</None>
	<None Update="Preview.png" CopyToOutputDirectory="PreserveNewest" />
    <None Remove="Publish.ps1" />
    <None Remove="BuildLinked.ps1" />
    <None Remove="Reloaded.Trimming.targets" />
    <None Remove="Reloaded.Checks.targets" />
	<None Update="Redirector\**\*" CopyToOutputDirectory="PreserveNewest" />
	<!-- <None Update="ManualRedirected\**\*" CopyToOutputDirectory="PreserveNewest" /> -->
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.NET.ILLink.Tasks" Version="8.0.8" />
	<PackageReference Include="Reloaded.Hooks" Version="4.3.0" />
    <PackageReference Include="Reloaded.Mod.Interfaces" Version="2.4.0" ExcludeAssets="runtime" />
    <PackageReference Include="Reloaded.SharedLib.Hooks" Version="1.16.3" />
    <PackageReference Include="Reloaded.Universal.Redirector.Interfaces" Version="1.1.0" />
	<PackageReference Include="Reloaded.Memory" Version="8.1.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\MRDX.Base.ExtractDataBin.Interface\MRDX.Base.ExtractDataBin.Interface.csproj" />
    <ProjectReference Include="..\MRDX.Base.Mod.Interfaces\MRDX.Base.Mod.Interfaces.csproj" />
    <ProjectReference Include="..\MRDX.Base.Mod\MRDX.Base.Mod.csproj" />
  </ItemGroup>
	
	<Target Name="Replace" BeforeTargets="BeforeBuild;BeforeRebuild">
		<PropertyGroup>
			<InputFile>ModConfig.template.json</InputFile>
			<OutputFile>ModConfig.json</OutputFile>
		</PropertyGroup>
		<WriteLinesToFile File="$(OutputFile)" Lines="$([System.IO.File]::ReadAllText($(InputFile)).Replace('{{ MOD_VERSION }}','$(Version)'))" Overwrite="true" />
	</Target>
</Project>
